import telebot, wikipedia, random, datetime, schedule, asyncio, sqlite3
from googlesearch import search
import numpy as np


def main():
    bot = telebot.TeleBot('5740263278:AAFTyI5d5q5DyT5SwiH6yfGOQHKeazR26EU')
    namebot = '–ï–≤–∞'
    wikipedia.set_lang('ru')
    date_and_time = datetime.datetime.now().strftime('%H.%M.%S : %d-%m-%Y')
    conn = sqlite3.connect('db/evadatabase.db', check_same_thread=False)
    cursor = conn.cursor()
    registration = []

    def db_table_val(user_id: int, user_name: str, birthday: str):
        cursor.execute('INSERT INTO evabase (user_id, user_name, birthday) VALUES(?, ?, ?)',
                       (user_id, user_name, birthday))
        conn.commit()

    def new_event(user_id: int, event: str, event_date: str):
        cursor.execute('INSERT INTO events (user_id, event, event_date) VALUES(?, ?, ?)', (user_id, event, event_date))
        conn.commit()

    def all_new_event(event: str, date: str):
        cursor.execute('INSERT INTO all_events (event, date) VALUES(?, ?)', (event, date))
        conn.commit()

    @bot.message_handler(commands=['reg'])
    def register(message):
        bot.reply_to(message, '–í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –∏–º—è')
        bot.register_next_step_handler(message, register_2)

    def register_2(message):
        registration.append(message.text)
        bot.reply_to(message, '–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è, –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î. –ó–Ω–∞–∫ "-" –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω.‚ÄºÔ∏è')
        bot.register_next_step_handler(message, register_3)

    def register_3(message):
        registration.append(message.text)
        bot.reply_to(message, f'–í—Å—ë –≤–µ—Ä–Ω–æ?\n{registration[0]}\n{registration[1]}')
        bot.register_next_step_handler(message, register_4)

    def register_4(message):
        try:
            answer = message.text
            if answer == '–î–∞' or answer == '–¥–∞':
                bot.reply_to(message, '–û—Ç–ª–∏—á–Ω–æ. –î–∞–Ω–Ω—ã–µ –≤–Ω–µ—Å–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö ‚úÖ\n–°–ø–∞—Å–∏–±–æ!\n'
                                      '–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∏–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏—è.\n'
                                      '–î–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ /base')
                us_id = message.from_user.id
                us_name = registration[0]
                birth = registration[1]
                db_table_val(user_id=us_id, user_name=us_name, birthday=birth)
                registration.clear()
            elif answer == '–ù–µ—Ç' or answer == '–Ω–µ—Ç':
                registration.clear()
                bot.reply_to(message, '–¢–æ–≥–¥–∞, –¥–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º –≤—Å–µ —Å–Ω–∞—á–∞–ª–∞. –í–≤–µ–¥–∏—Ç–µ /reg')
        except Exception as error:
            registration.clear()
            bot.reply_to(message, '–û—à–∏–±–∫–∞. –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –≤—ã —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ.')

    @bot.message_handler(commands=['base'])
    def base_req(message):
        bot.reply_to(message, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö:\n'
                              '/All - –í—Å—è –±–∞–∑–∞üìñ\n'
                              '/My_event - –í–∞—à–∏ —Å–æ–±—ã—Ç–∏—èüìñ\n'
                              '/Add_my_event - –î–æ–±–∞–≤–∏—Ç—å –º–æ–µ —Å–æ–±—ã—Ç–∏–µüñå\n'
                              '/Add_all_event - –î–æ–±–∞–≤–∏—Ç—å –æ–±—â–µ–µ —Å–æ–±—ã—Ç–∏–µüñå\n'
                              '/Show_all_event - –ü–æ–∫–∞–∑–∞—Ç—å –æ–±—â–∏–µ —Å–æ–±—ã—Ç–∏—èüìñ\n'
                              '/Delete_my_event - –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –í–∞—à–∏ —Å–æ–±—ã—Ç–∏—èüñç\n'
                              '/Delete_all_event - –£–¥–∞–ª–∏—Ç—å –æ–±—â–µ–µ —Å–æ–±—ã—Ç–∏–µüñç')

    @bot.message_handler(commands=['help'])
    def send_comands(message):
        bot.reply_to(message, '–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n'
                              'üìî–î–ª—è –ø–æ–∏—Å–∫–∞ —Å–ª–æ–≤ –≤ Wikipedia, –≤–≤–µ–¥–∏—Ç–µ /–ù–∞–π–¥–∏ (–æ–±—ä–µ–∫—Ç)\n'
                              'üåê–î–ª—è –ø–æ–∏—Å–∫–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ, –≤–≤–µ–¥–∏—Ç–µ –ï–≤–∞ –∏—â–∏\n'
                              'üìÖ–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ –∏ –¥–∞—Ç—ã –Ω–∞–ø–∏—à–∏—Ç–µ –ï–≤–∞, –¥–∞—Ç–∞ –∏–ª–∏ –ï–≤–∞, –≤—Ä–µ–º—è\n'
                              '–í—ã —Ç–∞–∫ –∂–µ, –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –º–æ—ë –º–Ω–µ–Ω–∏–µ, –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ '
                              '–Ω–∞–ø–∏—Å–∞—Ç—å –ï–≤–∞ 1 –∏–ª–∏ 2\n'
                              'üóÇ–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è–º–∏, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /base')

    @bot.message_handler(commands=['start'])
    def send_welcome(message):
        bot.reply_to(message, "–î–æ–±—Ä—ã–π –¥–µ–Ω—å. –ú–µ–Ω—è –∑–æ–≤—É—Ç –ï–≤–∞. –Ø —Å–µ–º–µ–π–Ω—ã–π —á–∞—Ç-–±–æ—Çüëã\n"
                              "–°–ø–∏—Å–æ–∫ –º–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–∞–Ω–¥–æ–π /help\n"
                              "–í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –∫–æ –º–Ω–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è, –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å.\n"
                              "–ò –º–µ–Ω—è –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –ø–æ—Ö–≤–∞–ª–∏—Ç—å. –ú–Ω–µ –±—É–¥–µ—Ç –ø—Ä–∏—è—Ç–Ω–æ üòã\n"
                              "–í–æ–∑–º–æ–∂–Ω—ã –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–±–æ–∏ –≤ –º–æ–µ–π —Ä–∞–±–æ—Ç–µ, –Ω–æ —è –ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ —É—á—É—Å—å.")
        bot.reply_to(message, '–î–ª—è –Ω–∞—á–∞–ª–∞, –¥–∞–≤–∞–π—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è. –í–≤–µ–¥–∏—Ç–µ /reg —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–µ–±–æ–ª—å—à—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—éüìù')

    def wikisearch(word):
        try:
            result = wikipedia.summary(word)
            return result
        except Exception as e:
            return '–í —ç–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏–∏ –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —ç—Ç–æ–º'

    @bot.message_handler(commands=['–ù–∞–π–¥–∏'], content_types=['text'])
    def searchwiki(message):
        bot.reply_to(message, '–ù–∞—á–∏–Ω–∞—é –ø–æ–∏—Å–∫')
        word = str(message).lower().split(' ')
        bot.send_message(message.chat.id, wikisearch(word))

    @bot.message_handler(content_types=['text'])
    def communication(message):
        result = message.text
        if result.startswith("–ï–≤–∞ –∏—â–∏"):
            bot.reply_to(message, '–ò—â—É...')
            for link in search(result, tld='co.in', num=5, stop=5, pause=2):
                bot.reply_to(message, link)
        elif result == '–ï–≤–∞':
            answer_list = ['–ê–π?', '–Ø —Ç—É—Ç', '–ß—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å?', '–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å?', '–°–ª—É—à–∞—é', '–î–∞?',
                           '–ß—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?']
            answer = random.choice(answer_list)
            bot.reply_to(message, answer)
        elif result == '–ï–≤–∞ –¥–∞—Ç–∞' or result == '–ï–≤–∞ –≤—Ä–µ–º—è' or result == '–ï–≤–∞, –¥–∞—Ç–∞' or result == '–ï–≤–∞, –≤—Ä–µ–º—è':
            bot.reply_to(message, date_and_time)
        for_choise = str(result).split(' ')
        if len(for_choise) >= 3:
            if for_choise[0] == '–ï–≤–∞' and for_choise[2] == '–∏–ª–∏':
                list_choise = [for_choise[1], for_choise[3]]
                bot.reply_to(message, f'–Ø —Å—á–∏—Ç–∞—é, —á—Ç–æ –ª—É—á—à–µ {random.choice(list_choise)}')
        elif result == '–ï–≤–∞ –º–æ–ª–æ–¥–µ—Ü' or result == '–ï–≤–∞, –º–æ–ª–æ–¥–µ—Ü':
            bot.reply_to(message, '–°–ø–∞—Å–∏–±–æ, –º–Ω–µ –æ—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ :)')
        if result == '/All@EvavaFamilyBot' or result == '/All':
            bot.reply_to(message, '–í–æ—Ç –≤—Å—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:\n'
                                  '–ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä, id —Ç–µ–ª–µ–≥—Ä–∞–º–º, –∏–º—è, –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è.')
            a = cursor.execute(f'SELECT * FROM evabase').fetchall()
            b = []
            for i in a:
                b.append(i)
            bot.reply_to(message, f'{np.array(b)}')
            b.clear()
        elif result == '/Add_my_event@EvavaFamilyBot' or result == '/Add_my_event':
            bot.reply_to(message, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è, –∏ –¥–∞—Ç—É —Å–æ–±—ã—Ç–∏—è, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ.'
                                  '–í–ù–ò–ú–ê–ù–ò–ï‚ÄºÔ∏è\n–°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ —Å–æ–±—ã—Ç–∏–µ, –ø–æ—Ç–æ–º "!" –ø–æ—Å–ª–µ —á–µ–≥–æ –¥–∞—Ç—É '
                                  '(–≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î)'
                                  '. –í –æ–¥–Ω—É —Å—Ç—Ä–æ—á–∫—É.\n–ü—Ä–∏–º–µ—Ä: –°–æ–±—ã—Ç–∏–µ ! –¥–∞—Ç–∞')
            bot.register_next_step_handler(message, add_new_event)
        elif result == '/My_event@EvavaFamilyBot' or result == '/My_event':
            us_id = message.from_user.id
            c = cursor.execute(f'SELECT event, event_date FROM events WHERE user_id = {us_id}').fetchall()
            cc = []
            for jj in c:
                cc.append(jj)
            bot.reply_to(message, f'–í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ —Å–æ–±—ã—Ç–∏—è:\n{np.array(cc)}\n\n\n'
                                  f'–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ –º–µ–Ω—é /base '
                                  f'–∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /Add_my_event\n'
                                  f'–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–æ–±—ã—Ç–∏—è –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π /Delete_my_event')
            cc.clear()
        elif result == '/Delete_my_event@EvavaFamilyBot' or result == '/Delete_my_event':
            us_id = message.from_user.id
            d = cursor.execute(f'SELECT event, event_date FROM events WHERE user_id = {us_id}').fetchall()
            dd = []
            for jjj in d:
                dd.append(jjj)
            bot.reply_to(message, f'–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–æ–±—ã—Ç–∏—è?\n'
                                  f'–û—Ç–≤–µ—Ç—å—Ç–µ: –î–∞/–ù–µ—Ç\n\n\n'
                                  f'{np.array(dd)}')
            bot.register_next_step_handler(message, delete_event)
            dd.clear()
        elif result == '/Show_all_event@EvavaFamilyBot' or result == '/Show_all_event':
            try:
                e = cursor.execute(f'SELECT * FROM all_events').fetchall()
                ee = []
                for kk in e:
                    ee.append(kk)
                bot.reply_to(message, f'–¢–µ–∫—É—â–∏–µ –æ–±—â–∏–µ —Å–æ–±—ã—Ç–∏—è:\n{np.array(ee)}\n\n\n'
                                      f'–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ –º–µ–Ω—é /base '
                                      f'–∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /Add_all_event')
                ee.clear()
            except Exception as error:
                bot.reply_to(message, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
        elif result == '/Add_all_event@EvavaFamilyBot' or result == '/Add_all_event':
            bot.reply_to(message, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è, –∏ –¥–∞—Ç—É —Å–æ–±—ã—Ç–∏—è, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ.'
                                  '–í–ù–ò–ú–ê–ù–ò–ï‚ÄºÔ∏è\n–°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ —Å–æ–±—ã—Ç–∏–µ, –ø–æ—Ç–æ–º "!" –ø–æ—Å–ª–µ —á–µ–≥–æ –¥–∞—Ç—É(–≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î'
                                  '. –í –æ–¥–Ω—É —Å—Ç—Ä–æ—á–∫—É.\n–ü—Ä–∏–º–µ—Ä: –°–æ–±—ã—Ç–∏–µ ! –¥–∞—Ç–∞')
            bot.register_next_step_handler(message, add_all_event)
        elif result == '/Delete_all_event@EvavaFamilyBot' or result == '/Delete_all_event':
            events = cursor.execute(f'SELECT * FROM all_events').fetchall()
            eee = []
            for kkk in events:
                eee.append(kkk)
            bot.reply_to(message, f'–¢–µ–∫—É—â–∏–µ –æ–±—â–∏–µ —Å–æ–±—ã—Ç–∏—è:\n{np.array(eee)}\n\n\n'
                                  f'–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–æ–±—ã—Ç–∏—è, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å.')
            eee.clear()
            bot.register_next_step_handler(message, delete_all_events)

    def delete_all_events(message):
        number = int(message.text)
        cursor.execute(f'DELETE FROM all_events WHERE id = "{number}"')
        conn.commit()
        bot.reply_to(message, '–°–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ!üñç')

    def add_all_event(message):
        all_add_event = str(message.text).split('!')
        all_new_event(event=all_add_event[0], date=all_add_event[1])
        bot.reply_to(message, '–°–æ–±—ã—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ‚úÖ\n'
                              '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±—â–∏–µ —Å–æ–±—ã—Ç–∏—è –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ –º–µ–Ω—é /base, –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /Show_all_event\n'
                              '–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –æ–±—â–µ–µ —Å–æ–±—ã—Ç–∏–µ –∫–æ–º–∞–Ω–¥–æ–π /Add_all_event')

    def delete_event(message):
        us_id = message.from_user.id
        count = message.text
        if count == '–î–∞' or count == '–¥–∞':
            cursor.execute(f'DELETE FROM events '
                           f'WHERE user_id = "{us_id}"')
            conn.commit()
            bot.reply_to(message, '–í–∞—à–∏ —Å–æ–±—ã—Ç–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã.')
        else:
            bot.reply_to(message, '–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. /My_event')

    def add_new_event(message):
        us_id = message.from_user.id
        new_event_add = str(message.text).split('!')
        new_event(user_id=us_id, event=new_event_add[0], event_date=new_event_add[1])
        bot.reply_to(message, '–°–æ–±—ã—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ‚úÖ\n'
                              '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ —Å–æ–±—ã—Ç–∏—è –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ –º–µ–Ω—é /base, –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /My_event\n'
                              '–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ –∫–æ–º–∞–Ω–¥–æ–π /Add_my_event')

    bot.infinity_polling()


if __name__ == '__main__':
    main()
